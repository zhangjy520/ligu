<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.A_MasterMapper">

    <resultMap id="BaseResult" type="cn.gukeer.platform.modelView.BZRView">
        <result column="cname" property="className" jdbcType="VARCHAR"/>
        <result column="classId" property="classId" jdbcType="VARCHAR"/>
        <result column="tname" property="teacherName" jdbcType="VARCHAR"/>
        <result column="teacherId" property="teacherId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="csname" property="xdName" jdbcType="VARCHAR"/>
        <result column="no" property="teacherNo" jdbcType="VARCHAR"/>
        <result column="nj" property="nj" jdbcType="INTEGER"/>
        <result column="tname" property="courseTeacher" jdbcType="VARCHAR"/>
        <result column="courseId" property="courseId" jdbcType="VARCHAR"/>
        <result column="tcname" property="courseName" jdbcType="VARCHAR"/>
        <result column="refId" property="courseClassId" jdbcType="VARCHAR"/>
        <result column="csId" property="sectionId" jdbcType="VARCHAR"/>
        <result column="cycleId" property="cycleId" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询所有班主任的方法-->
    <select id="getAllMasterByGradeClassIds" resultMap="BaseResult" parameterType="java.util.List">
        SELECT
        m.`class_id` AS classId,
        any_value(m.`cname`) AS className,
        any_value(m.`bh`),
        any_value(m.`tname` )AS teacherName,
        any_value(m.`teacher_id`) AS teacherId,
        any_value(m.`csId`) AS sectionId,
        any_value(m.`csname` )AS xdName,
        any_value(m.`cycleId`) AS cycleId,
        any_value(d.`GROUP_CONCAT(t.id)`) AS deputyIds,
        any_value(d.`tname` )AS deputymasterName,
        any_value(c.`nj` )AS nj
        FROM
        v_ref_teacher_class_master m
        LEFT JOIN v_ref_teacher_class_deputy d
        ON m.`class_id` = d.`class_id`
        AND m.`cycleId` = d.`cycleId`

        LEFT JOIN org_grade_class c ON c.`id`=m.`class_id` AND c.`nj`=#{nj}
        WHERE
        <if test="xdId != null and xdId !='' ">
            c.`xd`=#{xdId}
        </if>

        <if test="cycleId != null and cycleId !='' ">
            AND m.`cycleId` =#{cycleId}
        </if>
        GROUP BY m.`class_id`
        ORDER BY m.`bh`

        <!-- SELECT
        c.`name` AS cname,
        c.id AS cid,
        c.bh AS bh,
        GROUP_CONCAT(t.id),
        GROUP_CONCAT(t.`name`)AS tname,
        ref.`class_id`,
        ref.`teacher_id`,
        ref.type,
        ref.cycle_id AS cycleId,
        cs.id AS csId,
        cs.name AS csname
        FROM
        ref_teacher_class ref,
        user_teacher t,
        org_grade_class c
        LEFT JOIN org_class_section cs
        ON cs.`id` = c.`xd`
        WHERE c.`id` = ref.class_id
        AND t.id = ref.teacher_id
        <if test="xdId != null and xdId !='' ">
            AND c.xd=#{xdId}
        </if>

        AND c.nj=#{nj}

        <if test="cycleId != null and cycleId !='' ">
            AND ref.cycle_id =#{cycleId}
        </if>
        GROUP BY ref.`class_id`
        ORDER BY bh-->
        <!--SELECT
        c.`name` AS cname,
        c.id AS cid,
        c.bh AS bh,
        t.id,
        t.`name` AS tname,
        ref.`class_id`,
        ref.`teacher_id`,
        ref.type,
        ref.cycle_id AS cycleId,
        cs.id AS csId,
        cs.name AS csname
        FROM
        ref_teacher_class ref,
        user_teacher t,
        org_grade_class c
        LEFT JOIN org_class_section cs
        ON cs.`id` = c.`xd`
        WHERE c.`id` = ref.class_id
        AND t.id = ref.teacher_id
        <if test="xdId != null and xdId !='' ">
        AND c.xd=#{xdId}
        </if>

        AND c.nj=#{nj}

        <if test="cycleId != null and cycleId !='' ">
        AND ref.cycle_id =#{cycleId}
        </if>
        AND  ref.`type`=${type}
        ORDER BY bh-->
    </select>


    <select id="findClassNameByXdAndClassId" resultMap="BaseResult">
       SELECT c.id,c.name as cname ,cs.name as csname
       FROM org_grade_class c
       LEFT JOIN org_class_section cs ON c.xd = cs.id
        WHERE c.id=#{classId} AND cs.id=#{xd}
    </select>

    <!--老师的搜索功能查询-->
    <select id="findteacherByNameAndSchoolICycleId" resultMap="BaseResult">
        SELECT
        c.`name` AS cname,
        c.id,
        c.nj,
        t.id,
        t.`name` AS tname,
        t.no,
        ref.`class_id`,
        ref.`teacher_id`,
        ref.type,
        cs.name AS csname
        FROM
        ref_teacher_class ref
        LEFT JOIN org_grade_class c ON ref.`class_id`=c.`id`
        LEFT JOIN org_class_section cs ON c.xd = cs.id
        LEFT JOIN user_teacher t ON ref.`teacher_id`=t.id
        WHERE
        <if test="cycleId !='' and cycleId != null">
            ref.`cycle_id` = #{cycleId}
        </if>
        <if test="name !='' and name != null">
            AND t.name LIKE #{name}
        </if>
        AND t.del_flag=0
    </select>

    <select id="findAllCourseTeacherBycourseClassList" resultMap="BaseResult" parameterType="java.util.List">
        SELECT
        c.`name` AS cname,c.id AS classId,c.nj,c.xd,t.id AS TeacherId,t.`name` AS
        tname,t.no,ref.`class_id`,ref.`teacher_id`,ref.id as
        refId,ref.course_id AS courseId,cs.name as csname,tc.id,tc.name AS tcname
        FROM
        org_grade_class c LEFT JOIN org_class_section cs ON c.xd =cs.id AND cs.id=#{xdId},
        teach_ref_course_class ref,user_teacher t,teach_course tc
        WHERE c.id = ref.class_id AND t.id = ref.teacher_id
        AND c.nj=#{nj}
        AND tc.id = ref.course_id
        AND t.del_flag=0
        <if test="cycleId != null and cycleId!=''">
            and tc.cycle_id=#{cycleId}
        </if>
        AND ref.course_id IN
        <foreach collection="courseClassList" item="courseClass" index="index" open="(" separator="," close=")">
            (#{courseClass.courseId})
        </foreach>
    </select>

    <select id="findAllCourseTeacherByCourseIdAndXdAndNjAndCycleId" resultMap="BaseResult">
        SELECT
        class.`name` AS cname,class.id AS classId,class.nj,class.xd,teacher.id AS TeacherId,teacher.`name` AS
        tname,teacher.no,ref.`class_id`,ref.`teacher_id`,ref.id as
        refId,ref.course_id AS courseId,ssection.name as csname,course.id,course.name AS tcname
        FROM
        teach_ref_course_class ref
        LEFT JOIN org_grade_class class ON ref.`class_id`= class.`id`
        LEFT JOIN org_class_section ssection ON ssection.`id`=class.xd
        <if test="xdId !=null and xdId !=''">
            AND ssection.id=#{xdId}
        </if>

        LEFT JOIN user_teacher teacher ON ref.`teacher_id`=teacher.`id` AND teacher.del_flag=0
        LEFT JOIN teach_course course ON course.`id`=ref.`course_id`
        <if test="cycleId !=null and cycleId !=''">
            AND course.`cycle_id`=#{cycleId}
        </if>
        WHERE
        <if test="courseId !=null and courseId !=''">
            ref.`course_id`=#{courseId}
        </if>
        AND class.nj=#{nj}
        AND ref.teacher_id IS NOT NULL
        AND ref.class_id IS NOT NULL


    </select>

    <select id="findCourseTeacherByCycleIdAndSchoolIdAndName" resultMap="BaseResult"
            parameterType="java.util.List">
        SELECT
        class.`name` AS cname,
        class.id,
        class.nj,
        class.xd ,
        teacher.id,
        teacher.`name` AS tname,
        teacher.no,
        ref.`class_id`,
        ref.`teacher_id`,
        ref.id AS refId,
        ref.course_id AS courseId,
        course.id,
        course.name AS tcname,
        ssection.name AS csname
        FROM
        teach_ref_course_class ref
        LEFT JOIN org_grade_class class ON ref.`class_id`=class.`id`
        LEFT JOIN org_class_section ssection
        ON class.xd = ssection.id
        LEFT JOIN user_teacher teacher ON teacher.`id`=ref.`teacher_id`
        LEFT JOIN teach_course course ON course.`id`=ref.`course_id`

        WHERE
        <if test="name != null and name!=''">
            teacher.name LIKE #{name}
        </if>
        <if test="schoolId != null and schoolId!=''">
            AND course.`cycle_id`=#{cycleId}
        </if>
        AND teacher.del_flag=0

    </select>

    <insert id="insertBatchTeacherClass">
        INSERT INTO `ref_teacher_class`
        (
        cycle_id,
        `class_id`,
        `teacher_id`,
        `type`
        )
        values
        <foreach collection="correctTeacherClassList" item="item" index="index" separator=",">
            (
            #{item.cycleId},#{item.classId},#{item.teacherId},#{item.type}
            )
        </foreach>
    </insert>


    <select id="findAllCourseTeacherBycourseClassIdList" resultMap="BaseResult" parameterType="java.util.List">
        SELECT
        c.`name` AS cname,c.id,c.nj,c.xd,t.id,t.`name` AS tname,t.no,ref.`class_id`,ref.`teacher_id`,ref.id as
        refId,ref.course_id AS courseId,cs.name as csname,tc.id,tc.name AS tcname
        FROM
        org_grade_class c LEFT JOIN org_class_section cs ON c.xd =cs.id,
        teach_ref_course_class ref,user_teacher t,teach_course tc
        WHERE c.id = ref.class_id AND t.id = ref.teacher_id
        AND tc.id = ref.course_id
        AND t.del_flag=0
        <if test="courseIdList !='' and courseIdList !=null">
            AND ref.course_id IN
            <foreach collection="courseIdList" item="courseId" index="index" open="(" separator="," close=")">
                (#{courseId})
            </foreach>
        </if>
    </select>


    <select id="findAllTeacherClassByClassIdAndCycleId" resultMap="BaseResult">
        SELECT
        c.`id` AS classId,
        c.`name` AS cname,
        c.id AS cid,
        c.nj AS nj,
        t.id,
        t.`name` AS tname,
        ref.`class_id`,
        ref.`teacher_id` AS teacherId,
        ref.type,
        ref.cycle_id AS cycleId,
        cs.id AS csId,
        cs.name AS csname
        FROM
        ref_teacher_class ref,
        user_teacher t,
        org_grade_class c
        LEFT JOIN org_class_section cs
        ON cs.`id` = c.`xd`
        WHERE c.`id` = ref.class_id
        AND t.id = ref.teacher_id

        <if test="classId != null and classId !='' ">
            AND ref.class_id =#{classId}
        </if>

        <if test="cycleId != null and cycleId !='' ">
            AND ref.cycle_id =#{cycleId}
        </if>
        AND ref.type!=3
        AND t.del_flag=0

    </select>
</mapper>