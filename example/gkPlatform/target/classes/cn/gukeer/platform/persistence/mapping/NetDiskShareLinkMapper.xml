<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.NetDiskShareLinkMapper" >
  <resultMap id="BaseResultMap" type="cn.gukeer.platform.persistence.entity.NetDiskShareLink" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="shared_teacher_id" property="sharedTeacherId" jdbcType="VARCHAR" />
    <result column="share_type" property="shareType" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="is_dir" property="isDir" jdbcType="BIT" />
    <result column="expire_date" property="expireDate" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="can_preview" property="canPreview" jdbcType="BIT" />
    <result column="can_downlod" property="canDownlod" jdbcType="BIT" />
    <result column="is_expired" property="isExpired" jdbcType="BIT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="repo_name" property="repoName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="time_str_create" property="timeStrCreate" jdbcType="VARCHAR" />
    <result column="time_str_update" property="timeStrUpdate" jdbcType="VARCHAR" />
    <result column="file_size" property="fileSize" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, school_id, teacher_id, link, shared_teacher_id, share_type, file_name, is_dir, 
    expire_date, token, can_preview, can_downlod, is_expired, email, path, repo_name, 
    create_time, time_str_create, time_str_update, file_size
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.gukeer.platform.persistence.entity.NetDiskShareLinkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from net_disk_share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from net_disk_share
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from net_disk_share
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gukeer.platform.persistence.entity.NetDiskShareLinkExample" >
    delete from net_disk_share
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gukeer.platform.persistence.entity.NetDiskShareLink" >
    insert into net_disk_share (id, school_id, teacher_id, 
      link, shared_teacher_id, share_type, 
      file_name, is_dir, expire_date, 
      token, can_preview, can_downlod, 
      is_expired, email, path, 
      repo_name, create_time, time_str_create, 
      time_str_update, file_size)
    values (#{id,jdbcType=VARCHAR}, #{schoolId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{link,jdbcType=VARCHAR}, #{sharedTeacherId,jdbcType=VARCHAR}, #{shareType,jdbcType=INTEGER}, 
      #{fileName,jdbcType=VARCHAR}, #{isDir,jdbcType=BIT}, #{expireDate,jdbcType=INTEGER}, 
      #{token,jdbcType=VARCHAR}, #{canPreview,jdbcType=BIT}, #{canDownlod,jdbcType=BIT}, 
      #{isExpired,jdbcType=BIT}, #{email,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{repoName,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{timeStrCreate,jdbcType=VARCHAR}, 
      #{timeStrUpdate,jdbcType=VARCHAR}, #{fileSize,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gukeer.platform.persistence.entity.NetDiskShareLink" >
    insert into net_disk_share
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="link != null" >
        link,
      </if>
      <if test="sharedTeacherId != null" >
        shared_teacher_id,
      </if>
      <if test="shareType != null" >
        share_type,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="isDir != null" >
        is_dir,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="canPreview != null" >
        can_preview,
      </if>
      <if test="canDownlod != null" >
        can_downlod,
      </if>
      <if test="isExpired != null" >
        is_expired,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="repoName != null" >
        repo_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="timeStrCreate != null" >
        time_str_create,
      </if>
      <if test="timeStrUpdate != null" >
        time_str_update,
      </if>
      <if test="fileSize != null" >
        file_size,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="sharedTeacherId != null" >
        #{sharedTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="shareType != null" >
        #{shareType,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="isDir != null" >
        #{isDir,jdbcType=BIT},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="canPreview != null" >
        #{canPreview,jdbcType=BIT},
      </if>
      <if test="canDownlod != null" >
        #{canDownlod,jdbcType=BIT},
      </if>
      <if test="isExpired != null" >
        #{isExpired,jdbcType=BIT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="repoName != null" >
        #{repoName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="timeStrCreate != null" >
        #{timeStrCreate,jdbcType=VARCHAR},
      </if>
      <if test="timeStrUpdate != null" >
        #{timeStrUpdate,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update net_disk_share
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolId != null" >
        school_id = #{record.schoolId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null" >
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.sharedTeacherId != null" >
        shared_teacher_id = #{record.sharedTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.shareType != null" >
        share_type = #{record.shareType,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDir != null" >
        is_dir = #{record.isDir,jdbcType=BIT},
      </if>
      <if test="record.expireDate != null" >
        expire_date = #{record.expireDate,jdbcType=INTEGER},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.canPreview != null" >
        can_preview = #{record.canPreview,jdbcType=BIT},
      </if>
      <if test="record.canDownlod != null" >
        can_downlod = #{record.canDownlod,jdbcType=BIT},
      </if>
      <if test="record.isExpired != null" >
        is_expired = #{record.isExpired,jdbcType=BIT},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.repoName != null" >
        repo_name = #{record.repoName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.timeStrCreate != null" >
        time_str_create = #{record.timeStrCreate,jdbcType=VARCHAR},
      </if>
      <if test="record.timeStrUpdate != null" >
        time_str_update = #{record.timeStrUpdate,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null" >
        file_size = #{record.fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update net_disk_share
    set id = #{record.id,jdbcType=VARCHAR},
      school_id = #{record.schoolId,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      shared_teacher_id = #{record.sharedTeacherId,jdbcType=VARCHAR},
      share_type = #{record.shareType,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      is_dir = #{record.isDir,jdbcType=BIT},
      expire_date = #{record.expireDate,jdbcType=INTEGER},
      token = #{record.token,jdbcType=VARCHAR},
      can_preview = #{record.canPreview,jdbcType=BIT},
      can_downlod = #{record.canDownlod,jdbcType=BIT},
      is_expired = #{record.isExpired,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      repo_name = #{record.repoName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      time_str_create = #{record.timeStrCreate,jdbcType=VARCHAR},
      time_str_update = #{record.timeStrUpdate,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gukeer.platform.persistence.entity.NetDiskShareLink" >
    update net_disk_share
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="sharedTeacherId != null" >
        shared_teacher_id = #{sharedTeacherId,jdbcType=VARCHAR},
      </if>
      <if test="shareType != null" >
        share_type = #{shareType,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="isDir != null" >
        is_dir = #{isDir,jdbcType=BIT},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="canPreview != null" >
        can_preview = #{canPreview,jdbcType=BIT},
      </if>
      <if test="canDownlod != null" >
        can_downlod = #{canDownlod,jdbcType=BIT},
      </if>
      <if test="isExpired != null" >
        is_expired = #{isExpired,jdbcType=BIT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="repoName != null" >
        repo_name = #{repoName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="timeStrCreate != null" >
        time_str_create = #{timeStrCreate,jdbcType=VARCHAR},
      </if>
      <if test="timeStrUpdate != null" >
        time_str_update = #{timeStrUpdate,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gukeer.platform.persistence.entity.NetDiskShareLink" >
    update net_disk_share
    set school_id = #{schoolId,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      shared_teacher_id = #{sharedTeacherId,jdbcType=VARCHAR},
      share_type = #{shareType,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      is_dir = #{isDir,jdbcType=BIT},
      expire_date = #{expireDate,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      can_preview = #{canPreview,jdbcType=BIT},
      can_downlod = #{canDownlod,jdbcType=BIT},
      is_expired = #{isExpired,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      repo_name = #{repoName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      time_str_create = #{timeStrCreate,jdbcType=VARCHAR},
      time_str_update = #{timeStrUpdate,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>