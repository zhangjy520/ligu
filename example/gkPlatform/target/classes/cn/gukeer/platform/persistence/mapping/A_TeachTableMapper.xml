<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.A_TeachTableMapper">
        <resultMap id="BaseResultMap" type="cn.gukeer.platform.modelView.TeachTableView">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="school_id" property="schoolId" jdbcType="VARCHAR"/>
        <result column="classId" property="classId" jdbcType="VARCHAR"/>
        <result column="className" property="className" jdbcType="VARCHAR"/>
        <result column="nj" property="nj" jdbcType="INTEGER"/>
        <result column="teacherId" property="teacherId" jdbcType="VARCHAR"/>
        <result column="teacherName" property="teacherName" jdbcType="VARCHAR"/>
        <result column="courseId" property="courseId" jdbcType="VARCHAR"/>
        <result column="courseName" property="courseName" jdbcType="VARCHAR"/>
        <result column="roomId" property="classRoomId" jdbcType="DOUBLE"/>
        <result column="roomNum" property="classRoomNum" jdbcType="DOUBLE"/>
        <result column="weekoneDay" property="weekDay" jdbcType="INTEGER"/>
        <result column="node" property="node" jdbcType="INTEGER"/>
        <result column="cycleId" property="cycleId" jdbcType="VARCHAR"/>
        <result column="xdId" property="xdId" jdbcType="VARCHAR"/>
        <result column="xdName" property="xdName" jdbcType="VARCHAR"/>
        <result column="xdShortName" property="xdShortName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findTeachTableByCurrentCycleWeekAndSchoolId" resultMap="BaseResultMap">
        <!--  SELECT
          class.`id` AS classId,
          class.`name` AS className,
          class.`nj` AS nj,
          teacher.`id` AS teacherId,
          teacher.`name` AS teacherName,
          course.`id` AS courseId,
          course.`name` AS courseName,
         /* room.id AS roomId,
          room.`room_num` AS roomNum,*/
          ttable.`weekend`,
          ttable.`id` AS id,
          LEFT(table_id,1) AS weekoneDay,
          CONVERT(RIGHT(table_id,1) ,SIGNED) AS node

          FROM
          teach_table ttable,
          org_grade_class class,
          user_teacher teacher,
          teach_course course
         /* teach_class_room room*/
          WHERE ttable.`class_id` = class.`id`
          AND ttable.`teacher_id` = teacher.`id`
          AND ttable.`course_id` = course.`id`
          /* AND ttable.`class_room_id` = room.`id`*/
          AND RIGHT(table_id,1) IN (1,2,3,4,5,6,7,8)
          &lt;!&ndash;<if test="currentCycleWeek != '' and currentCycleWeek != 0">
              AND ttable.`weekend`=#{currentCycleWeek}
          </if>&ndash;&gt;
          AND ttable.`weekend`=#{currentCycleWeek}
          <if test="schoolId != '' and schoolId != null">
              AND ttable.`school_id`=#{schoolId}
          </if>

          <if test="classId != '' and classId != null">
              AND ttable.`class_id`=#{classId}
          </if>
          ORDER BY RIGHT(table_id,1)-->

        SELECT
        class.`id` AS classId,
        class.`name` AS className,
        class.`nj` AS nj,
        cs.`id` AS xdId,
        cs.`name` AS xdName,
        cs.`short_name` AS xdShortName,
        teacher.`id` AS teacherId,
        teacher.`name` AS teacherName,
        course.`id` AS courseId,
        course.`name` AS courseName,
        course.`cycle_id` AS cycleId,
        room.id AS roomId,
        room.`room_num` AS roomNum,
        ttable.`weekend`,
        ttable.`id` AS id,
        CAST(SUBSTRING_INDEX(ttable.table_id,',',1) AS SIGNED)  AS weekoneDay,
        CAST(SUBSTRING_INDEX(ttable.table_id,',',-1) AS SIGNED)  AS node

        FROM
        teach_table ttable LEFT JOIN user_teacher teacher ON ttable.`teacher_id` = teacher.`id`
        LEFT JOIN org_grade_class class ON ttable.`class_id` = class.`id`
        LEFT JOIN org_class_section cs ON class.`xd`=cs.`id`
        LEFT JOIN teach_course course ON ttable.`course_id` = course.`id`
        LEFT JOIN teach_class_room room ON ttable.`class_room_id` = room.`id`

        WHERE
        <if test="schoolId != '' and schoolId != null">
            ttable.`school_id`=#{schoolId}
        </if>

        <if test="nodeList != null and nodeList.size() > 0">
            AND RIGHT(table_id, 1) IN
            <foreach item="node" index="index" collection="nodeList" open="(" separator="," close=")">
                #{node}
            </foreach>
        </if>
        <if test="currentweek != '' and currentweek !=0">
            AND ttable.`weekend`=#{currentweek}
        </if>
        <if test="classId != '' and classId != null">
            AND ttable.`class_id`=#{classId}
        </if>

        <if test="cycleId != '' and cycleId != null">
            AND course.`cycle_id`=#{cycleId}
        </if>
        AND teacher.del_flag = 0
        ORDER BY RIGHT(table_id, 1)
    </select>

    <select id="findLatestCycleGroupSchoolId" resultType="java.util.Map">
        SELECT
        id,
        c2.*
        FROM
        teach_cycle c1,
        (SELECT
        MAX(term_begin_time) AS latest_time,
        school_id
        FROM
        teach_cycle
        GROUP BY school_id) c2
        WHERE c1.`term_begin_time` = c2.latest_time
        AND c1.`school_id` = c2.school_id
    </select>


    <insert id="batchInsertTeachTable">
        INSERT INTO `teach_table`
        (`id`,
        `class_id`,
        `course_id`,
        `teacher_id`,
        `table_id`,
        `class_room_id`,
        `school_id`,
        `weekend`,
        `cycle_id`
        )
        values
        <foreach collection="teachTables" item="teachTable" index="index" separator=",">
            (
            #{teachTable.id},#{teachTable.classId},#{teachTable.courseId},#{teachTable.teacherId},#{teachTable.tableId},#{teachTable.classRoomId},#{teachTable.schoolId},#{teachTable.weekend},#{teachTable.cycleId}
            )
        </foreach>
    </insert>

    <update id="updateBatchTeachTables" parameterType="java.util.List">
        <foreach collection="updateBatchTeachTables" item="item" index="index" open="" close="" separator=";">

            update teach_table

            <trim prefix="set" suffixOverrides=",">
                <if test="item.courseId !=null and item.courseId !=''">
                    course_id=#{item.courseId},
                </if>
                <if test="item.teacherId !=null and item.teacherId !=''">
                    teacher_id=#{item.teacherId},
                </if>

                <if test="item.classRoomId !=null and item.classRoomId !=''">
                    class_room_id=#{item.classRoomId}
                </if>

            </trim>

            where
            weekend = #{item.weekend}
            <if test="item.cycleId !=null and item.cycleId !=''">
                AND cycle_id=#{item.cycleId}
            </if>
            <if test="item.tableId !=null and item.tableId !=''">
                AND table_id=#{item.tableId}
            </if>
            <if test="item.classId !=null and item.classId !=''">
                AND class_id=#{item.classId}
            </if>
            <if test="item.schoolId !=null and item.schoolId !=''">
                AND school_id=#{item.schoolId}
            </if>
            <if test="item.tableId !=null and item.tableId !=''">
                AND table_id=#{item.tableId}
            </if>
        </foreach>


    </update>


    <select id="findCurrentTeachTable" resultType="cn.gukeer.platform.modelView.TeachTableView">

      SELECT DISTINCT
            weekend,
            class_id classId,
            cycle_id cycleId,
            weekofday weekDay,
            kcmc courseName,
            course_id courseId,
            start_time startTime,
            end_time endTime,
            ut.name teacherName,
            ut.id teacherId,
            RIGHT(table_id, 1) node
        FROM
            v_select_teach_table vstt
                LEFT JOIN
            user_teacher ut ON vstt.teacher_id = ut.id
        WHERE 1=1 AND weekend IS NOT NULL
        <if test="currentWeek !=null and currentWeek !='-1'">
             AND weekend = #{currentWeek}
        </if>
        <if test="classId !=null and classId !=''">
            AND vstt.class_id = #{classId}
        </if>
        <if test="cycleId !=null and cycleId !=''">
            AND vstt.cycle_id = #{cycleId}
        </if>
        <if test="weekDay !=null and weekDay !='-1'">
            AND weekofday = #{weekDay}
        </if>
    </select>
</mapper>
