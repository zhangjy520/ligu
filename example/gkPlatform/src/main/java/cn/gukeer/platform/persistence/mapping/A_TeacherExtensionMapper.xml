<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.gukeer.platform.persistence.dao.A_TeacherExtensionMapper">

    <resultMap id="ExtensionBaseResultMap" type="cn.gukeer.platform.modelView.TeacherView"
               extends="cn.gukeer.platform.persistence.dao.TeacherMapper.BaseResultMap"/>

    <select id="selectTeacherViewByParam" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        t.`id`,
        t.`school_id`,
        s.`name` AS schoolName,
        t.`name`,
        t.`quan_pin` AS quanPin,
        t.`gender`,
        t.`identity`,
        t.`account` AS account,
        t.`is_manage` AS isManage,
        t.`no`,
        t.`phone`,
        t.`mobile`,
        t.`email`,
        t.`bgsdh` as workPhone,
        t.`start_work` AS startWork,
        t.`create_by`,
        t.`create_date`,
        t.`update_by`,
        t.`update_date`,
        t.`remarks`,
        t.`del_flag`
        FROM user_teacher t,org_school s WHERE
        t.`is_manage` != 1 AND
        t.`school_id`=s.`id` AND t.del_flag=0
        AND t.`school_id`=#{schoolId}
        <if test="teacherId != null and teacherId!=-1">
            AND t.`id`=#{teacherId}
        </if>
        <if test="teacherName != null and teacherName!=''">
            AND t.`name` like #{teacherName}
        </if>
        ORDER BY t.`create_date` DESC
    </select>

    <select id="findTeacherViewList" resultType="java.util.Map">
        SELECT
        *
        FROM
        v_teacher_school v
        WHERE v.`delFlag` = 0
        AND v.`schoolId` = #{schoolId}
        <if test="departIds != null and departIds.size() > 0">
            AND v.`departmentId` IN
            <foreach item="id" index="index" collection="departIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="teacherName != null and teacherName!=''">
            AND v.`name` LIKE #{teacherName}
        </if>


    </select>

    <select id="findTeacherViewByTitle" resultType="java.util.Map">
        SELECT
        *
        FROM
        v_teacher_school v
        WHERE 1=1
        <if test="titleId != null and titleId!=''">
            AND v.`titleId` = #{titleId}
        </if>
        <if test="teacherName != null and teacherName!=''">
            AND v.`name` LIKE #{teacherName}
        </if>
        <if test="schoolId != null and schoolId!=''">
            AND v.`schoolId` = #{schoolId}
        </if>
        <if test="loginSchoolId != null and loginSchoolId!=''">
            AND v.`schoolId` != #{loginSchoolId}
        </if>
        AND v.`delFlag` = 0
    </select>

    <update id="createAccount" parameterType="String">
      UPDATE `user_teacher`
        SET `account` = `quan_pin`
        WHERE school_id = #{schoolId } AND account IS NULL
    </update>

    <select id="selectByClassId" resultMap="ExtensionBaseResultMap">
        SELECT * from user_teacher t1
        where t1.id in
        (
        select t2.teacher_id from ref_teacher_class t2
        where t2.class_id = #{classId}
        and t2.type = #{type}
        )
        and t1.del_flag = 0
    </select>


    <delete id="delTeacherClass">
        DELETE from ref_teacher_class
        where teacher_id = #{teacherId} and type = #{type} and class_id = #{classId}
    </delete>


    <insert id="insertTeacherBatch">
        INSERT INTO `user_teacher`
        (`id`,
        `school_id`,
        `department_id`,
        `name`,
        `quan_pin`,
        `gender`,
        `identity`,
        `account`,
        `is_manage`,
        `role_id`,
        `title_id`,
        `no`,
        `phone`,
        `mobile`,
        `email`,
        `start_work`,
        `head_url`,
        `create_by`,
        `create_date`,
        `update_by`,
        `update_date`,
        `remarks`,
        `high_time`,
        `high_job`,
        `zc`,
        `pzxx`,
        `address`,
        `ggjsjb`,
        `htkssj`,
        `htjssj`,
        `cym`,
        `jtyb`,
        `sfzrjs`,
        `salary`,
        `jg`,
        `zzmm`,
        `cjgzsj`,
        `ysbysj`,
        `rjxk`,
        `sf`,
        `wysp`,
        `zgxz`,
        `xwsl`,
        `rjxkjb`,
        `xq`,
        `gwflf`,
        `zgxl`,
        `zgbyxx`,
        `yzy`,
        `pzsj`,
        `lwxsj`,
        `zzdh`,
        `gzgw`,
        `bgsdh`,
        `sfhq`,
        `sfbzr`,
        `wyyz`,
        `yxz`,
        `zgxw`,
        `zyjsgwfl`,
        `szjb`,
        `gzgwf`,
        `del_flag`)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},#{item.schoolId},#{item.departmentId},#{item.name},#{item.quanPin},#{item.gender},
            #{item.identity},#{item.account},#{item.isManage},#{item.roleId},#{item.titleId},#{item.no},
            #{item.phone},#{item.mobile},#{item.email},#{item.startWork},#{item.headUrl},#{item.createBy},
            #{item.createDate},#{item.updateBy},#{item.updateDate},#{item.remarks},#{item.highTime},#{item.highJob},
            #{item.zc},#{item.pzxx},#{item.address},#{item.ggjsjb},#{item.htkssj},#{item.htjssj},
            #{item.cym},#{item.jtyb},#{item.sfzrjs},#{item.salary},#{item.jg},#{item.zzmm},
            #{item.cjgzsj},#{item.ysbysj},#{item.rjxk},#{item.sf},#{item.wysp},#{item.zgxz},
            #{item.xwsl},#{item.rjxkjb},#{item.xq},#{item.gwflf},#{item.zgxl},#{item.zgbyxx},
            #{item.yzy},#{item.pzsj},#{item.lwxsj},#{item.zzdh},#{item.gzgw},#{item.bgsdh},
            #{item.sfhq},#{item.sfbzr},#{item.wyyz},#{item.yxz},#{item.zgxw},#{item.zyjsgwfl},
            #{item.szjb},#{item.gzgwf},#{item.delFlag}
            )
        </foreach>
    </insert>

    <select id="selectTeacherNameLike" resultMap="ExtensionBaseResultMap">
        SELECT * FROM user_teacher t WHERE t.name LIKE #{teacherName} AND t.del_flag=0 AND t.is_manage !=1
        <if test="schoolId != null and schoolId!=''">
            AND school_id = #{schoolId}
        </if>
        ORDER BY t.`create_date` DESC
    </select>

    <select id="selectBatchTeachers" resultMap="ExtensionBaseResultMap" parameterType="java.util.List">
        SELECT * FROM user_teacher
        <if test="idList != null and idList.size() > 0">
            WHERE 1=1
            <if test="schoolId != null and schoolId!=''">
                AND school_id = #{schoolId}
            </if>
            AND del_flag = 0
            and  is_manage != 1
            AND id IN
            <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>


    <select id="teacherListView" resultType="java.util.Map" parameterType="java.util.List">
        SELECT * FROM v_teacher_school v WHERE v.`delFlag`=0
        <if test="schoolId != null and schoolId!=''">
            AND v.`schoolId` = #{schoolId}
        </if>
        <if test="currentSchoolId != null and currentSchoolId!=''">
            AND v.`schoolId` &lt;&gt; #{currentSchoolId} AND v.`schoolParentId` = #{currentSchoolId}
        </if>
        AND NAME LIKE #{teacherName}
    </select>


    <select id="teacherReport" resultType="java.util.Map">
        SELECT
        SUM(CASE WHEN gender='1' THEN 1 ELSE 0 END) man,
        TRUNCATE(SUM(CASE WHEN gender='1' THEN 1 ELSE 0 END)/COUNT(*),4)*100 manc,
        SUM(CASE WHEN gender='2' THEN 1 ELSE 0 END) woman,
        TRUNCATE(SUM(CASE WHEN gender='2' THEN 1 ELSE 0 END)/COUNT(*),4)*100 womanc,
        SUM(CASE WHEN zzmm='其他' OR zzmm IS NULL THEN 1 ELSE 0 END) zzmm1,
        TRUNCATE(SUM(CASE WHEN zzmm='其他' OR zzmm IS NULL THEN 1 ELSE 0 END)/COUNT(*),4)*100 zzmm1c,
        SUM(CASE WHEN zzmm='中共党员' THEN 1 ELSE 0 END) zzmm2,
        TRUNCATE(SUM(CASE WHEN zzmm='中共党员' THEN 1 ELSE 0 END)/COUNT(*),4)*100 zzmm2c,
        SUM(CASE WHEN zzmm='共青团员' THEN 1 ELSE 0 END) zzmm3,
        TRUNCATE(SUM(CASE WHEN zzmm='共青团员' THEN 1 ELSE 0 END)/COUNT(*),4)*100 zzmm3c,
        SUM(CASE WHEN zzmm='群众' THEN 1 ELSE 0 END) zzmm4,
        TRUNCATE(SUM(CASE WHEN zzmm='群众' THEN 1 ELSE 0 END)/COUNT(*),4)*100 zzmm4c,
        SUM(CASE WHEN zgxl ='小学' OR zgxl IS NULL THEN 1 ELSE 0 END) xl1,
        TRUNCATE(SUM(CASE WHEN zgxl ='小学' OR zgxl IS NULL THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl1c,
        SUM(CASE WHEN zgxl ='初中' THEN 1 ELSE 0 END) xl2,
        TRUNCATE(SUM(CASE WHEN zgxl ='初中' THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl2c,
        SUM(CASE WHEN zgxl ='中职/高中' THEN 1 ELSE 0 END) xl3,
        TRUNCATE(SUM(CASE WHEN zgxl ='中职/高中' THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl3c,
        SUM(CASE WHEN zgxl ='专科' THEN 1 ELSE 0 END) xl4,
        TRUNCATE(SUM(CASE WHEN zgxl ='专科' THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl4c,
        SUM(CASE WHEN zgxl ='本科' THEN 1 ELSE 0 END) xl5,
        TRUNCATE(SUM(CASE WHEN zgxl ='本科' THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl5c,
        SUM(CASE WHEN zgxl ='硕士研究生' THEN 1 ELSE 0 END) xl6,
        TRUNCATE(SUM(CASE WHEN zgxl ='硕士研究生' THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl6c,
        SUM(CASE WHEN zgxl ='博士研究生' THEN 1 ELSE 0 END) xl7,
        TRUNCATE(SUM(CASE WHEN zgxl ='博士研究生' THEN 1 ELSE 0 END)/COUNT(*),4)*100 xl7c,
        (SELECT COUNT(*) FROM user_teacher u1 WHERE u1.`school_id` = #{loginSchoolId}) AS countp,
        TRUNCATE((SELECT COUNT(*) FROM user_teacher u1 WHERE u1.`school_id` = #{loginSchoolId})/COUNT(*),4)*100 AS
        countpc,
        COUNT(*) countAll
        FROM user_teacher u WHERE u.`school_id` IN
        <foreach item="school" index="index" collection="allSchool" open="(" separator="," close=")">
            #{school.id}
        </foreach>
    </select>


    <update id="batchUpdateTeacher" parameterType="java.util.Map">
        update user_teacher
        <set >
            <if test="schoolId != null" >
                school_id = #{schoolId,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null" >
                department_id = #{departmentId,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="quanPin != null" >
                quan_pin = #{quanPin,jdbcType=VARCHAR},
            </if>
            <if test="gender != null" >
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="identity != null" >
                identity = #{identity,jdbcType=VARCHAR},
            </if>
            <if test="account != null" >
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="isManage != null" >
                is_manage = #{isManage,jdbcType=INTEGER},
            </if>
            <if test="titleId != null" >
                title_id = #{titleId,jdbcType=VARCHAR},
            </if>
            <if test="no != null" >
                no = #{no,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null" >
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="startWork != null" >
                start_work = #{startWork,jdbcType=BIGINT},
            </if>
            <if test="headUrl != null" >
                head_url = #{headUrl,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null" >
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null" >
                create_date = #{createDate,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null" >
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null" >
                update_date = #{updateDate,jdbcType=BIGINT},
            </if>
            <if test="remarks != null" >
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="highTime != null" >
                high_time = #{highTime,jdbcType=BIGINT},
            </if>
            <if test="highJob != null" >
                high_job = #{highJob,jdbcType=VARCHAR},
            </if>
            <if test="zc != null" >
                zc = #{zc,jdbcType=VARCHAR},
            </if>
            <if test="pzxx != null" >
                pzxx = #{pzxx,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="ggjsjb != null" >
                ggjsjb = #{ggjsjb,jdbcType=VARCHAR},
            </if>
            <if test="htkssj != null" >
                htkssj = #{htkssj,jdbcType=BIGINT},
            </if>
            <if test="htjssj != null" >
                htjssj = #{htjssj,jdbcType=BIGINT},
            </if>
            <if test="cym != null" >
                cym = #{cym,jdbcType=VARCHAR},
            </if>
            <if test="jtyb != null" >
                jtyb = #{jtyb,jdbcType=VARCHAR},
            </if>
            <if test="sfzrjs != null" >
                sfzrjs = #{sfzrjs,jdbcType=VARCHAR},
            </if>
            <if test="salary != null" >
                salary = #{salary,jdbcType=VARCHAR},
            </if>
            <if test="jg != null" >
                jg = #{jg,jdbcType=VARCHAR},
            </if>
            <if test="zzmm != null" >
                zzmm = #{zzmm,jdbcType=VARCHAR},
            </if>
            <if test="cjgzsj != null" >
                cjgzsj = #{cjgzsj,jdbcType=BIGINT},
            </if>
            <if test="ysbysj != null" >
                ysbysj = #{ysbysj,jdbcType=BIGINT},
            </if>
            <if test="rjxk != null" >
                rjxk = #{rjxk,jdbcType=VARCHAR},
            </if>
            <if test="sf != null" >
                sf = #{sf,jdbcType=VARCHAR},
            </if>
            <if test="wysp != null" >
                wysp = #{wysp,jdbcType=VARCHAR},
            </if>
            <if test="zgxz != null" >
                zgxz = #{zgxz,jdbcType=VARCHAR},
            </if>
            <if test="xwsl != null" >
                xwsl = #{xwsl,jdbcType=VARCHAR},
            </if>
            <if test="rjxkjb != null" >
                rjxkjb = #{rjxkjb,jdbcType=VARCHAR},
            </if>
            <if test="xq != null" >
                xq = #{xq,jdbcType=VARCHAR},
            </if>
            <if test="gwflf != null" >
                gwflf = #{gwflf,jdbcType=VARCHAR},
            </if>
            <if test="zgxl != null" >
                zgxl = #{zgxl,jdbcType=VARCHAR},
            </if>
            <if test="zgbyxx != null" >
                zgbyxx = #{zgbyxx,jdbcType=VARCHAR},
            </if>
            <if test="yzy != null" >
                yzy = #{yzy,jdbcType=VARCHAR},
            </if>
            <if test="pzsj != null" >
                pzsj = #{pzsj,jdbcType=BIGINT},
            </if>
            <if test="lwxsj != null" >
                lwxsj = #{lwxsj,jdbcType=BIGINT},
            </if>
            <if test="zzdh != null" >
                zzdh = #{zzdh,jdbcType=VARCHAR},
            </if>
            <if test="gzgw != null" >
                gzgw = #{gzgw,jdbcType=VARCHAR},
            </if>
            <if test="bgsdh != null" >
                bgsdh = #{bgsdh,jdbcType=VARCHAR},
            </if>
            <if test="sfhq != null" >
                sfhq = #{sfhq,jdbcType=VARCHAR},
            </if>
            <if test="sfbzr != null" >
                sfbzr = #{sfbzr,jdbcType=VARCHAR},
            </if>
            <if test="wyyz != null" >
                wyyz = #{wyyz,jdbcType=VARCHAR},
            </if>
            <if test="yxz != null" >
                yxz = #{yxz,jdbcType=VARCHAR},
            </if>
            <if test="zgxw != null" >
                zgxw = #{zgxw,jdbcType=VARCHAR},
            </if>
            <if test="zyjsgwfl != null" >
                zyjsgwfl = #{zyjsgwfl,jdbcType=VARCHAR},
            </if>
            <if test="szjb != null" >
                szjb = #{szjb,jdbcType=VARCHAR},
            </if>
            <if test="gzgwf != null" >
                gzgwf = #{gzgwf,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null" >
                del_flag = #{delFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
          #{id}
        </foreach>
    </update>

</mapper>