<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.ligu.mvc.persistence.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="cc.ligu.mvc.persistence.entity.Person" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="identity_num" property="identityNum" jdbcType="VARCHAR" />
    <result column="salary_details" property="salaryDetails" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cc.ligu.mvc.persistence.entity.Person" extends="BaseResultMap" >
    <result column="insurance_purchases" property="insurancePurchases" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, type, gender, contact, identity_num, salary_details, address, item_id, 
    item_name, remark, create_date, create_by, update_date, update_by, del_flag
  </sql>
  <sql id="Blob_Column_List" >
    insurance_purchases
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cc.ligu.mvc.persistence.entity.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oa_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.ligu.mvc.persistence.entity.PersonExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from oa_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from oa_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.ligu.mvc.persistence.entity.PersonExample" >
    delete from oa_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.ligu.mvc.persistence.entity.Person" >
    insert into oa_person (id, name, type, 
      gender, contact, identity_num, 
      salary_details, address, item_id, 
      item_name, remark, create_date, 
      create_by, update_date, update_by, 
      del_flag, insurance_purchases)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{gender,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{identityNum,jdbcType=VARCHAR}, 
      #{salaryDetails,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{itemId,jdbcType=INTEGER}, 
      #{itemName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, 
      #{createBy,jdbcType=INTEGER}, #{updateDate,jdbcType=BIGINT}, #{updateBy,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=INTEGER}, #{insurancePurchases,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="cc.ligu.mvc.persistence.entity.Person" >
    insert into oa_person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="identityNum != null" >
        identity_num,
      </if>
      <if test="salaryDetails != null" >
        salary_details,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="itemName != null" >
        item_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="insurancePurchases != null" >
        insurance_purchases,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="identityNum != null" >
        #{identityNum,jdbcType=VARCHAR},
      </if>
      <if test="salaryDetails != null" >
        #{salaryDetails,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="insurancePurchases != null" >
        #{insurancePurchases,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_person
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.identityNum != null" >
        identity_num = #{record.identityNum,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryDetails != null" >
        salary_details = #{record.salaryDetails,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.insurancePurchases != null" >
        insurance_purchases = #{record.insurancePurchases,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update oa_person
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      identity_num = #{record.identityNum,jdbcType=VARCHAR},
      salary_details = #{record.salaryDetails,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      insurance_purchases = #{record.insurancePurchases,jdbcType=VARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_person
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      identity_num = #{record.identityNum,jdbcType=VARCHAR},
      salary_details = #{record.salaryDetails,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.ligu.mvc.persistence.entity.Person" >
    update oa_person
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="identityNum != null" >
        identity_num = #{identityNum,jdbcType=VARCHAR},
      </if>
      <if test="salaryDetails != null" >
        salary_details = #{salaryDetails,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null" >
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="insurancePurchases != null" >
        insurance_purchases = #{insurancePurchases,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cc.ligu.mvc.persistence.entity.Person" >
    update oa_person
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      identity_num = #{identityNum,jdbcType=VARCHAR},
      salary_details = #{salaryDetails,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      insurance_purchases = #{insurancePurchases,jdbcType=VARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.ligu.mvc.persistence.entity.Person" >
    update oa_person
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      identity_num = #{identityNum,jdbcType=VARCHAR},
      salary_details = #{salaryDetails,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>