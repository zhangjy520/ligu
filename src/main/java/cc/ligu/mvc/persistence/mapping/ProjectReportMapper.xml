<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.ligu.mvc.persistence.dao.ProjectReportMapper" >
  <resultMap id="BaseResultMap" type="cc.ligu.mvc.persistence.entity.ProjectReport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_simple_name" property="projectSimpleName" jdbcType="VARCHAR" />
    <result column="project_pic" property="projectPic" jdbcType="VARCHAR" />
    <result column="project_desc" property="projectDesc" jdbcType="VARCHAR" />
    <result column="project_attach" property="projectAttach" jdbcType="VARCHAR" />
    <result column="manager" property="manager" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, project_name, project_simple_name, project_pic, project_desc, project_attach, 
    manager, company, create_date, create_by, update_date, update_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.ligu.mvc.persistence.entity.ProjectReportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from project_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from project_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from project_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.ligu.mvc.persistence.entity.ProjectReportExample" >
    delete from project_report
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.ligu.mvc.persistence.entity.ProjectReport" >
    insert into project_report (id, project_name, project_simple_name, 
      project_pic, project_desc, project_attach, 
      manager, company, create_date, 
      create_by, update_date, update_by
      )
    values (#{id,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{projectSimpleName,jdbcType=VARCHAR}, 
      #{projectPic,jdbcType=VARCHAR}, #{projectDesc,jdbcType=VARCHAR}, #{projectAttach,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, 
      #{createBy,jdbcType=INTEGER}, #{updateDate,jdbcType=BIGINT}, #{updateBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.ligu.mvc.persistence.entity.ProjectReport" >
    insert into project_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="projectSimpleName != null" >
        project_simple_name,
      </if>
      <if test="projectPic != null" >
        project_pic,
      </if>
      <if test="projectDesc != null" >
        project_desc,
      </if>
      <if test="projectAttach != null" >
        project_attach,
      </if>
      <if test="manager != null" >
        manager,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectSimpleName != null" >
        #{projectSimpleName,jdbcType=VARCHAR},
      </if>
      <if test="projectPic != null" >
        #{projectPic,jdbcType=VARCHAR},
      </if>
      <if test="projectDesc != null" >
        #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="projectAttach != null" >
        #{projectAttach,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update project_report
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectName != null" >
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectSimpleName != null" >
        project_simple_name = #{record.projectSimpleName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectPic != null" >
        project_pic = #{record.projectPic,jdbcType=VARCHAR},
      </if>
      <if test="record.projectDesc != null" >
        project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.projectAttach != null" >
        project_attach = #{record.projectAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null" >
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update project_report
    set id = #{record.id,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      project_simple_name = #{record.projectSimpleName,jdbcType=VARCHAR},
      project_pic = #{record.projectPic,jdbcType=VARCHAR},
      project_desc = #{record.projectDesc,jdbcType=VARCHAR},
      project_attach = #{record.projectAttach,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.ligu.mvc.persistence.entity.ProjectReport" >
    update project_report
    <set >
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectSimpleName != null" >
        project_simple_name = #{projectSimpleName,jdbcType=VARCHAR},
      </if>
      <if test="projectPic != null" >
        project_pic = #{projectPic,jdbcType=VARCHAR},
      </if>
      <if test="projectDesc != null" >
        project_desc = #{projectDesc,jdbcType=VARCHAR},
      </if>
      <if test="projectAttach != null" >
        project_attach = #{projectAttach,jdbcType=VARCHAR},
      </if>
      <if test="manager != null" >
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.ligu.mvc.persistence.entity.ProjectReport" >
    update project_report
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_simple_name = #{projectSimpleName,jdbcType=VARCHAR},
      project_pic = #{projectPic,jdbcType=VARCHAR},
      project_desc = #{projectDesc,jdbcType=VARCHAR},
      project_attach = #{projectAttach,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>