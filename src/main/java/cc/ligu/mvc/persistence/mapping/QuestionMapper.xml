<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.ligu.mvc.persistence.dao.QuestionMapper" >
  <resultMap id="BaseResultMap" type="cc.ligu.mvc.persistence.entity.Question" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="a" property="a" jdbcType="VARCHAR" />
    <result column="b" property="b" jdbcType="VARCHAR" />
    <result column="c" property="c" jdbcType="VARCHAR" />
    <result column="d" property="d" jdbcType="VARCHAR" />
    <result column="e" property="e" jdbcType="VARCHAR" />
    <result column="f" property="f" jdbcType="VARCHAR" />
    <result column="g" property="g" jdbcType="VARCHAR" />
    <result column="o" property="o" jdbcType="VARCHAR" />
    <result column="answer_correct" property="answerCorrect" jdbcType="VARCHAR" />
    <result column="answer_explain" property="answerExplain" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, name, content, level, score, a, b, c, d, e, f, g, o, answer_correct, answer_explain, 
    remark, create_date, create_by, update_date, update_by, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.ligu.mvc.persistence.entity.QuestionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from doc_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from doc_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from doc_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.ligu.mvc.persistence.entity.QuestionExample" >
    delete from doc_question
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.ligu.mvc.persistence.entity.Question" >
    insert into doc_question (id, type, name, 
      content, level, score, 
      a, b, c, d, 
      e, f, g, o, 
      answer_correct, answer_explain, remark, 
      create_date, create_by, update_date, 
      update_by, del_flag)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{a,jdbcType=VARCHAR}, #{b,jdbcType=VARCHAR}, #{c,jdbcType=VARCHAR}, #{d,jdbcType=VARCHAR}, 
      #{e,jdbcType=VARCHAR}, #{f,jdbcType=VARCHAR}, #{g,jdbcType=VARCHAR}, #{o,jdbcType=VARCHAR}, 
      #{answerCorrect,jdbcType=VARCHAR}, #{answerExplain,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=BIGINT}, #{createBy,jdbcType=INTEGER}, #{updateDate,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cc.ligu.mvc.persistence.entity.Question" >
    insert into doc_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="a != null" >
        a,
      </if>
      <if test="b != null" >
        b,
      </if>
      <if test="c != null" >
        c,
      </if>
      <if test="d != null" >
        d,
      </if>
      <if test="e != null" >
        e,
      </if>
      <if test="f != null" >
        f,
      </if>
      <if test="g != null" >
        g,
      </if>
      <if test="o != null" >
        o,
      </if>
      <if test="answerCorrect != null" >
        answer_correct,
      </if>
      <if test="answerExplain != null" >
        answer_explain,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="a != null" >
        #{a,jdbcType=VARCHAR},
      </if>
      <if test="b != null" >
        #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null" >
        #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null" >
        #{d,jdbcType=VARCHAR},
      </if>
      <if test="e != null" >
        #{e,jdbcType=VARCHAR},
      </if>
      <if test="f != null" >
        #{f,jdbcType=VARCHAR},
      </if>
      <if test="g != null" >
        #{g,jdbcType=VARCHAR},
      </if>
      <if test="o != null" >
        #{o,jdbcType=VARCHAR},
      </if>
      <if test="answerCorrect != null" >
        #{answerCorrect,jdbcType=VARCHAR},
      </if>
      <if test="answerExplain != null" >
        #{answerExplain,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update doc_question
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.a != null" >
        a = #{record.a,jdbcType=VARCHAR},
      </if>
      <if test="record.b != null" >
        b = #{record.b,jdbcType=VARCHAR},
      </if>
      <if test="record.c != null" >
        c = #{record.c,jdbcType=VARCHAR},
      </if>
      <if test="record.d != null" >
        d = #{record.d,jdbcType=VARCHAR},
      </if>
      <if test="record.e != null" >
        e = #{record.e,jdbcType=VARCHAR},
      </if>
      <if test="record.f != null" >
        f = #{record.f,jdbcType=VARCHAR},
      </if>
      <if test="record.g != null" >
        g = #{record.g,jdbcType=VARCHAR},
      </if>
      <if test="record.o != null" >
        o = #{record.o,jdbcType=VARCHAR},
      </if>
      <if test="record.answerCorrect != null" >
        answer_correct = #{record.answerCorrect,jdbcType=VARCHAR},
      </if>
      <if test="record.answerExplain != null" >
        answer_explain = #{record.answerExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update doc_question
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      a = #{record.a,jdbcType=VARCHAR},
      b = #{record.b,jdbcType=VARCHAR},
      c = #{record.c,jdbcType=VARCHAR},
      d = #{record.d,jdbcType=VARCHAR},
      e = #{record.e,jdbcType=VARCHAR},
      f = #{record.f,jdbcType=VARCHAR},
      g = #{record.g,jdbcType=VARCHAR},
      o = #{record.o,jdbcType=VARCHAR},
      answer_correct = #{record.answerCorrect,jdbcType=VARCHAR},
      answer_explain = #{record.answerExplain,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.ligu.mvc.persistence.entity.Question" >
    update doc_question
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="a != null" >
        a = #{a,jdbcType=VARCHAR},
      </if>
      <if test="b != null" >
        b = #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null" >
        c = #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null" >
        d = #{d,jdbcType=VARCHAR},
      </if>
      <if test="e != null" >
        e = #{e,jdbcType=VARCHAR},
      </if>
      <if test="f != null" >
        f = #{f,jdbcType=VARCHAR},
      </if>
      <if test="g != null" >
        g = #{g,jdbcType=VARCHAR},
      </if>
      <if test="o != null" >
        o = #{o,jdbcType=VARCHAR},
      </if>
      <if test="answerCorrect != null" >
        answer_correct = #{answerCorrect,jdbcType=VARCHAR},
      </if>
      <if test="answerExplain != null" >
        answer_explain = #{answerExplain,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.ligu.mvc.persistence.entity.Question" >
    update doc_question
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      a = #{a,jdbcType=VARCHAR},
      b = #{b,jdbcType=VARCHAR},
      c = #{c,jdbcType=VARCHAR},
      d = #{d,jdbcType=VARCHAR},
      e = #{e,jdbcType=VARCHAR},
      f = #{f,jdbcType=VARCHAR},
      g = #{g,jdbcType=VARCHAR},
      o = #{o,jdbcType=VARCHAR},
      answer_correct = #{answerCorrect,jdbcType=VARCHAR},
      answer_explain = #{answerExplain,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectRandomQuestionByCount" resultType="java.util.Map">
    SELECT
          *
      FROM
          `doc_question`
      WHERE
          id >= (
              SELECT
                  FLOOR(
                      RAND() * (SELECT MAX(id) FROM `doc_question`)
                  )
          )
      ORDER BY
          id
    <if test="count != null" >
      LIMIT #{count,jdbcType=INTEGER}
    </if>
  </select>
</mapper>