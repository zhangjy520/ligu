<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.ligu.mvc.persistence.dao.ItemMapper" >
  <resultMap id="BaseResultMap" type="cc.ligu.mvc.persistence.entity.Item" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="master" property="master" jdbcType="INTEGER" />
    <result column="master_name" property="masterName" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="item_flag" property="itemFlag" jdbcType="VARCHAR" />
    <result column="item_cycle" property="itemCycle" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="BIGINT" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parent_id, name, sort, code, type, grade, master, master_name, company_name, 
    item_flag, item_cycle, create_date, update_by, update_date, del_flag, remarks, create_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.ligu.mvc.persistence.entity.ItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from oa_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oa_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oa_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.ligu.mvc.persistence.entity.ItemExample" >
    delete from oa_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.ligu.mvc.persistence.entity.Item" >
    insert into oa_item (id, parent_id, name, 
      sort, code, type, grade, 
      master, master_name, company_name, 
      item_flag, item_cycle, create_date, 
      update_by, update_date, del_flag, 
      remarks, create_by)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, 
      #{master,jdbcType=INTEGER}, #{masterName,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{itemFlag,jdbcType=VARCHAR}, #{itemCycle,jdbcType=VARCHAR}, #{createDate,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=BIGINT}, #{delFlag,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cc.ligu.mvc.persistence.entity.Item" >
    insert into oa_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="master != null" >
        master,
      </if>
      <if test="masterName != null" >
        master_name,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="itemFlag != null" >
        item_flag,
      </if>
      <if test="itemCycle != null" >
        item_cycle,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="master != null" >
        #{master,jdbcType=INTEGER},
      </if>
      <if test="masterName != null" >
        #{masterName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="itemFlag != null" >
        #{itemFlag,jdbcType=VARCHAR},
      </if>
      <if test="itemCycle != null" >
        #{itemCycle,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update oa_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.master != null" >
        master = #{record.master,jdbcType=INTEGER},
      </if>
      <if test="record.masterName != null" >
        master_name = #{record.masterName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemFlag != null" >
        item_flag = #{record.itemFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.itemCycle != null" >
        item_cycle = #{record.itemCycle,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=BIGINT},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=BIGINT},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oa_item
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER},
      master = #{record.master,jdbcType=INTEGER},
      master_name = #{record.masterName,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      item_flag = #{record.itemFlag,jdbcType=VARCHAR},
      item_cycle = #{record.itemCycle,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=BIGINT},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.ligu.mvc.persistence.entity.Item" >
    update oa_item
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="master != null" >
        master = #{master,jdbcType=INTEGER},
      </if>
      <if test="masterName != null" >
        master_name = #{masterName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="itemFlag != null" >
        item_flag = #{itemFlag,jdbcType=VARCHAR},
      </if>
      <if test="itemCycle != null" >
        item_cycle = #{itemCycle,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.ligu.mvc.persistence.entity.Item" >
    update oa_item
    set parent_id = #{parentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      master = #{master,jdbcType=INTEGER},
      master_name = #{masterName,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      item_flag = #{itemFlag,jdbcType=VARCHAR},
      item_cycle = #{itemCycle,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>